h5 Créé par #[a(href="/member/"+entry.createdBy.key): b #{entry.createdBy.username}]
if entry.sc
	h5 Événement #[b Star Citizen]
h5 Du #[b #{dateformat(entry.startDate, "d mmm yyyy à HH:MM")}] au #[b #{dateformat(entry.endDate, "d mmm yyyy à HH:MM")}]
.tags
	if entry.public
		span.label.label-success Public
	if entry.open
		span.label.label-success Ouvert

hr
div!= content

hr
h4 Inscriptions
.row
	.col.col-md-4
		h5
			small.label.label-success Accepté (#{entry.present && entry.present.length || 0})
		ul
			each invited in entry.present
				li
					a(href=("/member/" + invited.key) target="_blank") #{invited.username}

	.col.col-md-4
		h5
			small.label.label-warning Peut-être (#{entry.maybe && entry.maybe.length || 0})
		ul
			each invited in entry.maybe
				li
					a(href=("/member/" + invited.key) target="_blank") #{invited.username}

	.col.col-md-4
		h5
			small.label.label-danger Refusé (#{entry.away && entry.away.length || 0})
		ul
			each invited in entry.away
				li
					a(href=("/member/" + invited.key) target="_blank") #{invited.username}
if isBN && entry.sc
	hr
	h4: a.btn.btn-link(role="button" data-toggle="collapse" href="#event-ships-collapse") Flotte potentielle
	#event-ships-collapse.collapse
		.row
			.col.col-md-6
				h5: small.label.label-success Accepté
				ul
					-
						const presents = Object.keys(entry.presentShips);
						presents.sort();
					each ship in presents
						li(title=entry.presentShips[ship].join(", ")) #{ship} #[b x#{entry.presentShips[ship].length}]
			.col.col-md-6
				h5: small.label.label-warning Peut-être
				ul
					-
						const maybes = Object.keys(entry.maybeShips);
						maybes.sort();
					each ship in maybes
						li(title=entry.maybeShips[ship].join(", ")) #{ship} #[b x#{entry.maybeShips[ship].length}]
